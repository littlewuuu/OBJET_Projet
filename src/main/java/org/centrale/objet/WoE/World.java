/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.centrale.objet.WoE;

import java.util.Random;
import java.util.ArrayList;

/**
 * The class {@link org.centrale.objet.WoE.World} represents a world that
 * contains different roles like
 * {@code Personnage}({@code Archer},{@code Paysan}, {@code Guerrier}) and
 * {@code Monstre}({@code Lapin}, {@code Loup}), the role {@link Personnage} can
 * attack {@link Monstre} through the method
 * {@link org.centrale.objet.WoE.Guerrier#combattre(org.centrale.objet.WoE.Creature) combattre},
 * it can also restore vitality through the use of {@code PationSoin}.
 *
 * @author wuzilong
 * @author ZouKang
 * @version 1.0
 */
public class World {

    /**
     * the size of the World
     */
    private final static int TAILLE = 50;

    /**
     * to identify if a coordinate is occupied, 0 stands for free
     * original point is [0,0] 
     * X coordinate [0,TAILLE]
     * Y coordinate [0,TAILLE]
     */
    private final int[][] OCCUPIED = new int[TAILLE+1][TAILLE+1];
    /**
     * Representing an {@code Archer}({@code Personnage}) in the world
     */
    public Archer robin;
    /**
     * Representing a Paysan(Personnage) in the world
     */
    public Paysan peon;
    /**
     * Representing a Lain(Monstre) in the world
     */
    public Lapin bugs1;
    /**
     * Representing another Lapin(Monstre) in the world
     */
    public Lapin bugs2; //new attribute
    /**
     * Representing an Archer(Personnage) in the world
     */
    public Archer guillaumeT;
    /**
     * Representing a Guerrier(Personnage) in the world
     */
    public Guerrier grosBill;//new
    /**
     * Representing a Loup(Monstre) in the world
     */
    public Loup wolfie;//new

    public ArrayList<Archer> archers = new ArrayList<>();
    public ArrayList<Paysan> paysans = new ArrayList<>();
    public ArrayList<Guerrier> guerriers = new ArrayList<>();
    public ArrayList<Loup> loups = new ArrayList<>();
    public ArrayList<Lapin> lapins = new ArrayList<>();
    public ArrayList<PotionSoin> potionsoins = new ArrayList<>();
    public ArrayList<Epee> epees = new ArrayList<>();

    /**
     *
     */
    public void tourDeJeu() {

    }

    public void aficheWorld() {

    }

    /**
     * Default parameterless constructor
     */
    public World() {
    }

    /**
     * Generate a random world with the coordinates of the Creature randomly
     * generated by {@link java.util.Random}
     */
    public void creerMondeAlea() {

        Random generateurAleatoire = new Random();
        int nbArchers = generateurAleatoire.nextInt(100);
        for (int i = 0; i < nbArchers; i++) {
            Archer a = new Archer(createPoints());
            archers.add(a);
        }
        
        int nbPaysan = generateurAleatoire.nextInt(100);
        for (int i = 0; i < nbPaysan; i++) {
            Paysan a = new Paysan(createPoints());
            paysans.add(a);
        }
        
        int nbLapin = generateurAleatoire.nextInt(100);
        for (int i = 0; i < nbLapin; i++) {
            Lapin a = new Lapin(createPoints());
            lapins.add(a);
        }

        int nbGuerrier = generateurAleatoire.nextInt(100);
        for (int i = 0; i < nbGuerrier; i++) {
            Guerrier a = new Guerrier(createPoints());
            guerriers.add(a);
        }

        int nbLoup = generateurAleatoire.nextInt(100);
        for (int i = 0; i < nbLoup; i++) {
            Loup a = new Loup(createPoints());
            loups.add(a);
        }
        
        for (Archer i : archers){
            i.affiche();
        }

        /* TP3 test
        //create some roles
        bugs1 = new Lapin();
        bugs2 = new Lapin();

        robin = new Archer("robin");
        peon = new Paysan("peon");

        grosBill = new Guerrier("grosBill");

        wolfie = new Loup();

       
        
        robin.setPos(points[0]);
        peon.setPos(points[1]);
        bugs1.setPos(points[2]);
        bugs2.setPos(points[3]);
        grosBill.setPos(points[4]);
        wolfie.setPos(points[5]);
        
        //copie
        System.out.println("================test copie================");
        guillaumeT = new Archer(robin);
        guillaumeT.setNom("guillaumeT");
        System.out.println("--------------avant-------------");
        guillaumeT.affiche();
        robin.affiche();
        System.out.println("--------------apres-------------");
        robin.deplace();
        guillaumeT.affiche();
        robin.affiche();
        System.out.println("================fin copie================");
        //Test potion function
        System.out.println("================test potion================");
        robin.setPtVie(70);
        PotionSoin potion1 = new PotionSoin();
        PotionSoin potion2 = new PotionSoin();
        robin.getPotionsoin().add(potion1);
        robin.getPotionsoin().add(potion2);
        robin.affiche();
        System.out.println("nombre de potion de robin: " + robin.getPotionsoin().size());
        System.out.println("consumer 1 potion");
        robin.usagePotion(potion2);
        robin.affiche();
        System.out.println("nombre de potion de robin: " + robin.getPotionsoin().size());
        System.out.println("consumer 1 potion");
        robin.usagePotion(potion1);
        System.out.println("nombre de potion de robin: " + robin.getPotionsoin().size());
        robin.usagePotion(potion1);
        robin.affiche();
        System.out.println("================fin de test potion================");
         */
    }

    /**
     * generate a random Point2D
     *
     * @return a instance of Class Point2D which generated by random
     */
    public Point2D createPoints() {
        Random generateurAleatoire = new Random();
        int X;
        int Y;
        while (true) {
            X = generateurAleatoire.nextInt(TAILLE + 1);
            Y = generateurAleatoire.nextInt(TAILLE + 1);
            if (OCCUPIED[X][Y] == 0) {
                OCCUPIED[X][Y] = 1;
                break;
            }
        }
        return new Point2D(X, Y);

    }

}
